{"version":3,"file":"static/js/8821.8881f803.chunk.js","mappings":"uJAKMA,EAAW,aA+KjB,UAvEa,WACX,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,GAAGH,UACXF,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAACC,UAAU,OAAML,SAAA,EACrBC,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAAAN,UACVC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,4BAEVC,EAAAA,EAAAA,KAACM,EAAAA,GAAS,CAAAP,UACRC,EAAAA,EAAAA,KAACO,EAAAA,GAAS,CACRC,KAjHH,q6BAkHGZ,SAAUA,EACVa,iBAAiB,EACjBC,MAAOC,EAAAA,GACPC,WAAS,YAKjBZ,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,GAAGH,UACXF,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAACC,UAAU,OAAML,SAAA,EACrBC,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAAAN,UACVC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBAEVC,EAAAA,EAAAA,KAACM,EAAAA,GAAS,CAAAP,UACRC,EAAAA,EAAAA,KAACO,EAAAA,GAAS,CACRC,KAxGH,s8BAyGGZ,SAAUA,EACVa,iBAAiB,EACjBC,MAAOC,EAAAA,GACPC,WAAS,YAKjBZ,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,GAAGH,UACXF,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAACC,UAAU,OAAML,SAAA,EACrBC,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAAAN,UACVC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBAEVC,EAAAA,EAAAA,KAACM,EAAAA,GAAS,CAAAP,UACRC,EAAAA,EAAAA,KAACO,EAAAA,GAAS,CACRC,KA3FH,w0BA4FGZ,SAAUA,EACVa,iBAAiB,EACjBC,MAAOC,EAAAA,GACPC,WAAS,YAKjBZ,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI,GAAGH,UACXF,EAAAA,EAAAA,MAACM,EAAAA,GAAK,CAACC,UAAU,OAAML,SAAA,EACrBC,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAAAN,UACVC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBAEVC,EAAAA,EAAAA,KAACM,EAAAA,GAAS,CAAAP,UACRC,EAAAA,EAAAA,KAACO,EAAAA,GAAS,CACRC,KAnFH,w6BAoFGZ,SAAUA,EACVa,iBAAiB,EACjBC,MAAOC,EAAAA,GACPC,WAAS,aAOvB,C","sources":["views/base/java/note/Note.js"],"sourcesContent":["import React from 'react'\nimport { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'\n\nimport { CopyBlock, dracula } from 'react-code-blocks'\n\nconst language = 'javascript'\nconst code1 = ` // convert to full with\n  protected String convToFullWith(String val,int size){\n    //文字セット\n    if(!isNullOrNullVal(val)) {\n        val = execFuncString(createSqlId(LOGIC_ID, \"MSFA_CHANGE_OUTPUT_VALUE\", \"A01\"),MSFA_CHANGE_OUTPUT_VALUE(value(val)));\n        if(val.length() > size) {\n            val = val.substring(0, size);\n        }\n        Charset _charset = StandardCharsets.UTF_8;\n        StringBuilder builder = new StringBuilder();\n        for(int i = 0; i< val.length(); i++ ) {\n            String chk = val.substring(i, i+1);\n            if (isSame(chk.length(),_charset.encode(chk).array().length)) {\n                for (char c : chk.toCharArray()) {\n                    builder.append((char) (c + 65248));\n                }\n            }else {\n                builder.append(chk);\n            }\t\n        }\n        return builder.toString();\n    }\n    return val;\n  }\n`\nconst code2 = `/*\n  * 特大の文字を削除します\n  * val： アイテム値\n  * bte: 制限のbyte\n  */\n  protected String rmOverByte(String val,int bte){\n      //文字セット\n      Charset _charset = StandardCharsets.UTF_8;\n      if(!isNullOrNullVal(val)) {\n          int valLength = _charset.encode(val).array().length;\n          if(valLength > bte) {\n              int cntByte = 0;\n              String rslt = \"\";\n              for(int i = 0 ; i < val.length(); i++) {\n                  String chk = val.substring(i, i+1);\n                  int numchk = _charset.encode(chk).array().length;\n                  cntByte += numchk;\n                  if(cntByte <= bte) {\n                      rslt += chk;\n                  }else {\n                      break;\n                  }\n              }\n              return rslt;\n          }\n      }\n      return val;\n  }\n`\nconst code3 = `/*\n *文字列の削除\n * val： アイテム値\n * endChar： 最後の希望の位置\n * numChar： 受信したい文字の数\n * rmChar0： 文字列の上部に文字[0]を消去するフラグ\n */\n  protected String rmChar(String val,int numChar,int endChar,boolean rmChar0){\n    if(!isNullOrNullVal(val)){\n        int split = val.length() - numChar;\n        if(split < 0) {\n            return val;\n        }\n        val = val.substring(split, endChar);\n        if(rmChar0){\n            char chk0 = '0';\n            while (isSame(val.charAt(0),chk0)){\n                    val = val.substring(1, val.length());\n            }\n        }\n    }\n    return val;\n  }\n`\nconst code4 = `/*\n *番号を削除します\n * val： アイテム値\n * numLeft：  受信したいの整数\n * numRight： 受信したいの小数\n */\n  protected MCNumber rmNum(MCNumber val,int numLeft,int numRight){\n    String valStr = String.valueOf(val);\n    if(!isNullOrNullVal(valStr)) {\n        if(valStr.contains(\".\")){\n            String[] arr = valStr.split(\".\", 2);\n            if(arr[0].length() > numLeft) {\n                arr[0] = rmChar(arr[0],numLeft,arr[0].length(),true);\n            }\n            if(arr[1].length() > numRight) {\n                arr[1] = rmChar(arr[1],arr[1].length(),numRight,false);\n            }\n            val = MCNumber.valueOf(arr[0]+\".\"+arr[1]);\n        }else {\n            val = MCNumber.valueOf(rmChar(valStr,numLeft,valStr.length(),true));\n        }\n    }\n    return val;\n  }\n`\nconst Note = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Convert to full-with</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CopyBlock\n              text={code1}\n              language={language}\n              showLineNumbers={true}\n              theme={dracula}\n              codeBlock\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Remove over byte</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CopyBlock\n              text={code2}\n              language={language}\n              showLineNumbers={true}\n              theme={dracula}\n              codeBlock\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Remove Charater</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CopyBlock\n              text={code3}\n              language={language}\n              showLineNumbers={true}\n              theme={dracula}\n              codeBlock\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>Remove Number</strong>\n          </CCardHeader>\n          <CCardBody>\n            <CopyBlock\n              text={code4}\n              language={language}\n              showLineNumbers={true}\n              theme={dracula}\n              codeBlock\n            />\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Note\n"],"names":["language","_jsxs","CRow","children","_jsx","CCol","xs","CCard","className","CCardHeader","CCardBody","CopyBlock","text","showLineNumbers","theme","dracula","codeBlock"],"sourceRoot":""}